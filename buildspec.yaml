version: 0.2

env:
  variables:
    REGION: "us-east-1"
    CLUSTER_NAME: "sample-webserver-eks-cluster"
    ECR_REPO_NAME: "sample-webserver-repo"

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo "Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - echo "Installing AWS CLI..."
      - apt-get update && apt-get install -y awscli jq
      - echo "Logging in to ECR..."
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin <your_account_id>.dkr.ecr.$REGION.amazonaws.com

  pre_build:
    commands:
      - echo "Starting pre-build phase..."
      - REPOSITORY_URI=<your_account_id>.dkr.ecr.$REGION.amazonaws.com/$ECR_REPO_NAME
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo "Image will be tagged as: $IMAGE_TAG"

  build:
    commands:
      - echo "Starting build phase..."
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Build and push successful!"

  post_build:
    commands:
      - echo "Starting post-build phase..."
      - aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME
      - sed -i "s|<image>|$REPOSITORY_URI:$IMAGE_TAG|g" k8s/deployment.yaml
      - kubectl apply -f k8s/deployment.yaml
      - kubectl apply -f k8s/service.yaml
      - echo "Deployment complete!"
